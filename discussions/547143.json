[
  {
    "Id": "1251470",
    "ThreadId": "547143",
    "Html": "I am really struggling to work out how to use the Office Integration Pack for LightSwitch to generate a word document from two entities with a one-to-many relationship. \r<br />\n<br />\nI have two tables ClientSelect (Parent) &amp; JobSummary (Child) and all I want to be able to do is map the columns and fields from JobSummary when a Particular 'Client' is selected from the ClientSelect entity.  Unfortunately I can only use the columns and fields from the ClientSelect entity using Beth Massi's example <a href=\"http://blogs.msdn.com/b/bethmassi/archive/2011/09/22/fun-with-the-office-integration-pack-extension-for-lightswitch.aspx\" rel=\"nofollow\">here</a>\r<br />\n<br />\nPlease can someone help me to modify my code below to enable me to generate a word document using the JobSummary entity too?  I have seen a solution in c# <a href=\"http://www.codeproject.com/Tips/454626/Using-LightSwitch-Office-Integration-Pack-with-Com\" rel=\"nofollow\">here</a> but I do not know how to apply this to my example below. \r<br />\n<br />\nThanks in advance, Graeme<br />\n<pre><code>Private Sub GenerateDoc_Execute()\n\n            Dim Filename As String = Me.TemplateLibrary.DocumentFileName\n            Dim WordFile = &quot;C:\\Document Templates\\&quot; &amp; Filename\n\n            If File.Exists(WordFile) = False Then\n                Me.ShowMessageBox(&quot;Template is not available&quot;, &quot;Generate Document&quot;, MessageBoxOption.Ok)\n            Else\n                If File.Exists(WordFile) Then\n\n                    Dim custFields As New List(Of OfficeIntegration.ColumnMapping)\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CFullname&quot;, &quot;CFullname&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CRef&quot;, &quot;CRef&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CAddress1&quot;, &quot;CAddressLine1&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CAddress2&quot;, &quot;CAddressLine2&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CTownCity&quot;, &quot;CTownCity&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CCountry&quot;, &quot;CCountry&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CPostCode&quot;, &quot;CPostCode&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CAdditionalInfo&quot;, &quot;CAdditionalInfo&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CHPhone&quot;, &quot;CHPhone&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CMPhone&quot;, &quot;CMPhone&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;CEmail&quot;, &quot;CEmail&quot;))\n\n                    'this section needs to bring data in from the JobSummary entity.....\n\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;JSAddress1&quot;, &quot;JSAddressLine1&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;JSAddress2&quot;, &quot;JSAddressLine2&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;JSTownCity&quot;, &quot;JSTownCity&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;JSCountry&quot;, &quot;JSCountry&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;JSPName&quot;, &quot;JSPName&quot;))\n                    custFields.Add(New OfficeIntegration.ColumnMapping(&quot;JSPDescription&quot;, &quot;JSPDescription&quot;))\n\n                    Dim doc As Object = OfficeIntegration.Word.GenerateDocument(WordFile, Me.ClientDetails, custFields)\n\nEnd If \nEnd if\nEnd Sub</code></pre>\n\n",
    "PostedDate": "2014-05-30T15:32:03.017-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1251834",
    "ThreadId": "547143",
    "Html": "Maybe you could flatten the entities with a SQL JOIN in a view ; and then process it as single table in the query and a loop in your code?<br />\n",
    "PostedDate": "2014-06-02T00:16:44.247-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]